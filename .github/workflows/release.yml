name: Release Management

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'

jobs:
  # Version management
  version:
    name: Bump Version
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      tag: ${{ steps.version.outputs.tag }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Bump version
        id: version
        run: |
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=v${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "tag=v${NEW_VERSION}" >> $GITHUB_OUTPUT
          
      - name: Update desktop app version
        run: |
          cd desktop-app
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          
      - name: Commit version changes
        run: |
          git add package.json package-lock.json desktop-app/package.json desktop-app/package-lock.json
          git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}"
          git tag ${{ steps.version.outputs.tag }}
          git push origin main
          git push origin ${{ steps.version.outputs.tag }}

  # Create GitHub release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: version
    if: always() && (needs.version.result == 'success' || github.event_name == 'push')
    
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: '.github/changelog_config.json'
          toTag: ${{ needs.version.outputs.tag || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version.outputs.tag || github.ref_name }}
          name: 'Bonsai SAT Prep ${{ needs.version.outputs.tag || github.ref_name }}'
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build and upload release assets
  build-release-assets:
    name: Build Release Assets
    runs-on: ${{ matrix.os }}
    needs: create-release
    
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: macos
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64
          - os: windows-latest
            platform: windows
            arch: x64
          - os: ubuntu-latest
            platform: linux
            arch: x64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install desktop dependencies
        run: |
          cd desktop-app
          npm ci
          
      - name: Build web application
        run: npm run build
        
      - name: Build desktop app (macOS)
        if: matrix.platform == 'macos'
        run: |
          cd desktop-app
          npm run build:mac -- --${{ matrix.arch }}
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          
      - name: Build desktop app (Windows)
        if: matrix.platform == 'windows'
        run: |
          cd desktop-app
          npm run build:win -- --${{ matrix.arch }}
        env:
          WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
          
      - name: Build desktop app (Linux)
        if: matrix.platform == 'linux'
        run: |
          cd desktop-app
          npm run build:linux -- --${{ matrix.arch }}
          
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create-release.outputs.tag_name }}
          files: desktop-app/dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Build and publish browser extension
  publish-extension:
    name: Publish Browser Extension
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build browser extension
        run: npm run build:extension
        
      - name: Package extension
        run: |
          cd browser-extension
          zip -r bonsai-sat-extension.zip dist/
          
      - name: Upload extension to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v4.0.1
        with:
          file-path: browser-extension/bonsai-sat-extension.zip
          extension-id: ${{ secrets.CHROME_EXTENSION_ID }}
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          
      - name: Upload extension to Firefox Add-ons
        uses: trmcnvn/firefox-addon@v1
        with:
          uuid: ${{ secrets.FIREFOX_EXTENSION_UUID }}
          xpi: browser-extension/bonsai-sat-extension.zip
          manifest: browser-extension/dist/manifest.json
          api-key: ${{ secrets.FIREFOX_API_KEY }}
          api-secret: ${{ secrets.FIREFOX_API_SECRET }}

  # Update documentation
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [create-release, build-release-assets]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Generate API documentation
        run: npm run docs:generate
        
      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/dist
          destination_dir: ${{ needs.create-release.outputs.tag_name }}
          
      - name: Update latest docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/dist
          destination_dir: latest

  # Notify stakeholders
  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-release-assets, publish-extension, update-docs]
    if: always()
    
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#bonsai-releases'
          text: |
            üéâ Bonsai SAT Prep ${{ needs.create-release.outputs.tag_name }} has been released!
            
            üì± Desktop apps: Available on GitHub Releases
            üåê Browser extension: Published to Chrome & Firefox stores
            üìö Documentation: Updated at docs.bonsai-sat.com
            
            Release notes: ${{ needs.create-release.outputs.html_url }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'Bonsai SAT Prep ${{ needs.create-release.outputs.tag_name }} Released'
          to: ${{ secrets.RELEASE_EMAIL_LIST }}
          from: 'Bonsai SAT Team <releases@bonsai-sat.com>'
          html_body: |
            <h2>üå± Bonsai SAT Prep ${{ needs.create-release.outputs.tag_name }} is now available!</h2>
            
            <p>We're excited to announce the latest version of Bonsai SAT Prep with new features and improvements.</p>
            
            <h3>Download Options:</h3>
            <ul>
              <li><strong>Desktop App:</strong> <a href="${{ needs.create-release.outputs.html_url }}">GitHub Releases</a></li>
              <li><strong>Browser Extension:</strong> Chrome Web Store & Firefox Add-ons</li>
              <li><strong>Web App:</strong> <a href="https://app.bonsai-sat.com">app.bonsai-sat.com</a></li>
            </ul>
            
            <p>View the full release notes: <a href="${{ needs.create-release.outputs.html_url }}">${{ needs.create-release.outputs.tag_name }}</a></p>
            
            <p>Happy studying! üöÄ</p>
            <p>The Bonsai SAT Team</p>